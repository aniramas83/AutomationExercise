// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Automation.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Create a Patient account")]
    public partial class CreateAPatientAccountFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateAPatientAccount.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Create a Patient account", "\tAs a Patient 16 or over\r\n\tI want to create an account on Summatix\r\n\tSo that I ca" +
                    "n access the Summatix platform", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I am at create patient account page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create patient account for 16 years or over")]
        [NUnit.Framework.TestCaseAttribute("aniramas718@gmail.com", "Test@12345", "Anitha", "Ramasamy", "16Years", "(UTC-10:00) Hawaii", "New Zealand", "Auckland", "2016", null)]
        [NUnit.Framework.TestCaseAttribute("aniramas736@gmail.com", "Test@12345", "Anitha", "Ramasamy", "Over16Years", "(UTC-10:00) Hawaii", "New Zealand", "Auckland", "2016", null)]
        public virtual void CreatePatientAccountFor16YearsOrOver(string email, string password, string firstName, string lastName, string dateOfBirth, string timeZone, string country, string state, string zip, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create patient account for 16 years or over", exampleTags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 10
 testRunner.Given("I start the account creation process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "ConfirmEmail",
                        "Password",
                        "ConfirmPassword"});
            table1.AddRow(new string[] {
                        string.Format("{0}", email),
                        string.Format("{0}", email),
                        string.Format("{0}", password),
                        string.Format("{0}", password)});
#line 11
 testRunner.When("I input all account details", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "FirstName",
                        "LastName",
                        "DateOfBirth"});
            table2.AddRow(new string[] {
                        string.Format("{0}", firstName),
                        string.Format("{0}", lastName),
                        string.Format("{0}", dateOfBirth)});
#line 14
 testRunner.And("I input all personal details", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "TimeZone",
                        "Country",
                        "State",
                        "Zip"});
            table3.AddRow(new string[] {
                        string.Format("{0}", timeZone),
                        string.Format("{0}", country),
                        string.Format("{0}", state),
                        string.Format("{0}", zip)});
#line 17
 testRunner.And("I Input all location details", ((string)(null)), table3, "And ");
#line 20
 testRunner.And("I agree to cookies policy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("I agree to terms and conditions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.Then("I verify the account creation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create patient account for under 16 and over 120 years")]
        [NUnit.Framework.TestCaseAttribute("aniramas214@gmail.com", "Test@12345", "Anitha", "Ramasamy", "Under16Years", null)]
        [NUnit.Framework.TestCaseAttribute("aniramas274@gmail.com", "Test@12345", "Anitha", "Ramasamy", "Over120Years", null)]
        public virtual void CreatePatientAccountForUnder16AndOver120Years(string email, string password, string firstName, string lastName, string dateOfBirth, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create patient account for under 16 and over 120 years", exampleTags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 30
 testRunner.Given("I start the account creation process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "ConfirmEmail",
                        "Password",
                        "ConfirmPassword"});
            table4.AddRow(new string[] {
                        string.Format("{0}", email),
                        string.Format("{0}", email),
                        string.Format("{0}", password),
                        string.Format("{0}", password)});
#line 31
 testRunner.When("I input all account details", ((string)(null)), table4, "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "FirstName",
                        "LastName",
                        "DateOfBirth"});
            table5.AddRow(new string[] {
                        string.Format("{0}", firstName),
                        string.Format("{0}", lastName),
                        string.Format("{0}", dateOfBirth)});
#line 34
 testRunner.And("I input all personal details", ((string)(null)), table5, "And ");
#line 37
 testRunner.Then(string.Format("I verify \"{0}\" date of birth error message is displayed", dateOfBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Email and Password mismatch validation")]
        public virtual void EmailAndPasswordMismatchValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Email and Password mismatch validation", ((string[])(null)));
#line 44
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 45
 testRunner.Given("I start the account creation process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "ConfirmEmail",
                        "Password",
                        "ConfirmPassword"});
            table6.AddRow(new string[] {
                        "aniramas834@gmail.com",
                        "aniramas833@gmail.com",
                        "Test@12345",
                        "Test@123456"});
#line 46
 testRunner.When("I input all account details without proceeding to next page", ((string)(null)), table6, "When ");
#line 49
 testRunner.Then("I verify email and password mismatch error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Invalid email validation")]
        [NUnit.Framework.TestCaseAttribute("aniramas83", null)]
        public virtual void InvalidEmailValidation(string email, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid email validation", exampleTags);
#line 51
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 52
 testRunner.Given("I start the account creation process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "ConfirmEmail",
                        "Password",
                        "ConfirmPassword"});
            table7.AddRow(new string[] {
                        string.Format("{0}", email),
                        string.Format("{0}", email),
                        "",
                        ""});
#line 53
 testRunner.When("I input all account details without proceeding to next page", ((string)(null)), table7, "When ");
#line 56
 testRunner.Then("I verify invalid email error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Insecure password validation")]
        public virtual void InsecurePasswordValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Insecure password validation", ((string[])(null)));
#line 62
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 63
 testRunner.Given("I start the account creation process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "ConfirmEmail",
                        "Password",
                        "ConfirmPassword"});
            table8.AddRow(new string[] {
                        "aniramas834@gmail.com",
                        "aniramas834@gmail.com",
                        "Test",
                        "Test"});
#line 64
 testRunner.When("I input all account details without proceeding to next page", ((string)(null)), table8, "When ");
#line 67
 testRunner.Then("I verify insecure password error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
